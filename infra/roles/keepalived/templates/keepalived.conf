! Configuration File for keepalived
global_defs {
    enable_script_security
    router_id LVS_DEVEL
}

vrrp_script check_script {
    script "/etc/keepalived/check_script.sh"
    interval 2
    user nobody
}

vrrp_instance VI_1 {
    {% if keepalived_check_script == 'check_k8s_apiserver.sh' -%}
    state {{ 'MASTER' if ansible_host == hostvars[groups['k8s-masters'][0]]['ansible_host'] else 'BACKUP' }}
    priority {{ '102' if ansible_host == hostvars[groups['k8s-masters'][0]]['ansible_host'] else '100' }}
    {% elif keepalived_check_script == 'check_clickhouse.sh' -%}
    state {{ 'MASTER' if ansible_host == hostvars[groups['clickhouse'][0]]['ansible_host'] else 'BACKUP' }}
    priority {{ '102' if ansible_host == hostvars[groups['clickhouse'][0]]['ansible_host'] else '100' }}
    {% elif keepalived_check_script == 'check_pgbouncer.sh' -%}
    state {{ 'MASTER' if ansible_host == hostvars[groups['pgbouncer'][0]]['ansible_host'] else 'BACKUP' }}
    priority {{ '102' if ansible_host == hostvars[groups['pgbouncer'][0]]['ansible_host'] else '100' }}
    {% else -%}
    state BACKUP
    {% endif -%}
    interface {{ network_interface }}
    mcast_src_ip {{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}
    virtual_router_id {{ keepalived_vip | split('.')| last }}
    advert_int 2
    authentication {
        auth_type PASS
        auth_pass {{ keepalived_auth_pass }}
    }
    virtual_ipaddress {
        {{ keepalived_vip }}
    }
    track_script {
       check_script
    }
}